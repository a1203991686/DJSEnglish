<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.djsenglish.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.djsenglish.pojo.Article">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="text" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="begin" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="img" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="collection" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="likes" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, text, begin, img, collection, likes, update_time, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.djsenglish.pojo.Article">
    insert into article (id, text, begin, 
      img, collection, likes, 
      update_time, create_time)
    values (#{id,jdbcType=INTEGER}, #{text,jdbcType=VARCHAR}, #{begin,jdbcType=VARCHAR}, 
      #{img,jdbcType=VARCHAR}, #{collection,jdbcType=INTEGER}, #{likes,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.djsenglish.pojo.Article">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="text != null">
        text,
      </if>
      <if test="begin != null">
        begin,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="collection != null">
        collection,
      </if>
      <if test="likes != null">
        likes,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="text != null">
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="begin != null">
        #{begin,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="collection != null">
        #{collection,jdbcType=INTEGER},
      </if>
      <if test="likes != null">
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.djsenglish.pojo.Article">
    update article
    <set>
      <if test="text != null">
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="begin != null">
        begin = #{begin,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="collection != null">
        collection = #{collection,jdbcType=INTEGER},
      </if>
      <if test="likes != null">
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.djsenglish.pojo.Article">
    update article
    set text = #{text,jdbcType=VARCHAR},
      begin = #{begin,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      collection = #{collection,jdbcType=INTEGER},
      likes = #{likes,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.djsenglish.pojo.Article">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="text" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="begin" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="img" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="collection" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="likes" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, text, `begin` , img, collection, likes, update_time, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByArticleIds" parameterType="java.util.List" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from article
      where id
      in
      <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
  </select>

  <select id="getList" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from article
    order by create_time DESC
    </select>
  <select id="selectCountByPrimaryKey" resultType="java.lang.Integer">
    select count(*)
    from article
    where id = #{articleId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.djsenglish.pojo.Article">
    insert into article (id, text, begin,
      img, collection, likes,
      update_time, create_time)
    values (#{id,jdbcType=INTEGER}, #{text,jdbcType=VARCHAR}, #{begin,jdbcType=VARCHAR},
      #{img,jdbcType=VARCHAR}, #{collection,jdbcType=INTEGER}, #{likes,jdbcType=INTEGER},
      now(), now())
  </insert>
  <insert id="insertSelective" parameterType="com.djsenglish.pojo.Article">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="text != null">
        text,
      </if>
      <if test="begin != null">
        begin,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="collection != null">
        collection,
      </if>
      <if test="likes != null">
        likes,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="text != null">
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="begin != null">
        #{begin,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="collection != null">
        #{collection,jdbcType=INTEGER},
      </if>
      <if test="likes != null">
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        now(),
      </if>
      <if test="createTime != null">
        now(),
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.djsenglish.pojo.Article">
    update article
    <set>
      <if test="text != null">
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="begin != null">
        begin = #{begin,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="collection != null">
        collection = #{collection,jdbcType=INTEGER},
      </if>
      <if test="likes != null">
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = now(),
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.djsenglish.pojo.Article">
    update article
    set text = #{text,jdbcType=VARCHAR},
      begin = #{begin,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      collection = #{collection,jdbcType=INTEGER},
      likes = #{likes,jdbcType=INTEGER},
      update_time = now(),
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyAddLike" parameterType="int">
    update article
    set likes = likes + 1
    where id = #{articleId}
  </update>
  <update id="updateByPrimaryKeyAddCollection" parameterType="int">
    update article
    set collection = collection + 1
    where id = #{articleId}
  </update>
  <update id="updateByPrimaryKeyDisLike" parameterType="int">
   update article
    set likes = likes - 1
    where id = #{articleId}
  </update>
  <update id="updateByPrimaryKeyDelCollection" parameterType="int">
    update article
    set collection = collection - 1
    where id = #{articleId}
  </update>
</mapper>